import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class SistemaBiblioteca {
    private List<Usuario> usuarios;
    private List<Bibliotecario> bibliotecarios;
    private List<Livro> livros;
    private Scanner scanner;

    public SistemaBiblioteca() {
        usuarios = new ArrayList<>();
        bibliotecarios = new ArrayList<>();
        livros = new ArrayList<>();
        scanner = new Scanner(System.in);

        // Adicionar alguns dados de exemplo
        usuarios.add(new Usuario(1, "João", "joao@email.com", "senha123", "123456789", "0908-99910"));
        bibliotecarios.add(new Bibliotecario(1, "Maria", "maria@biblioteca.com", "senha456"));
        livros.add(new Livro("O Senhor dos Anéis", "J.R.R. Tolkien", "9788533613379"));
    }

    public void iniciar() {
        while (true) {
            System.out.println("\n--- Sistema de Empréstimo de Livros ---");
            System.out.println("1. Login como Usuário");
            System.out.println("2. Login como Bibliotecário");
            System.out.println("3. Cadastrar Novo Usuário");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opção: ");

            int opcao = scanner.nextInt();
            scanner.nextLine(); // Consumir a nova linha

            switch (opcao) {
                case 1 -> loginUsuario();
                case 2 -> loginBibliotecario();
                case 3 -> cadastrarNovoUsuario();
                case 4 -> {
                    System.out.println("Obrigado por usar o sistema. Até logo!");
                    return;
                }
                default -> System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }

    private void loginUsuario() {
        System.out.print("Email: ");
        String email = scanner.nextLine();
        System.out.print("Senha: ");
        String senha = scanner.nextLine();

        for (Usuario usuario : usuarios) {
            if (usuario.autenticar(email, senha)) {
                menuUsuario(usuario);
                return;
            }
        }
        System.out.println("Email ou senha inválidos.");
    }

    private void loginBibliotecario() {
        System.out.print("Email: ");
        String email = scanner.nextLine();
        System.out.print("Senha: ");
        String senha = scanner.nextLine();

        for (Bibliotecario bibliotecario : bibliotecarios) {
            if (bibliotecario.autenticar(email, senha)) {
                menuBibliotecario(bibliotecario);
                return;
            }
        }
        System.out.println("Email ou senha inválidos.");
    }

    private void cadastrarNovoUsuario() {
        Usuario novoUsuario = new Usuario(0, "", "", "", "", " ");
        novoUsuario.entradaDados(scanner);
        usuarios.add(novoUsuario);
        System.out.println("Novo usuário cadastrado com sucesso!");
    }

    private void menuUsuario(Usuario usuario) {
        while (true) {
            System.out.println("\n--- Menu do Usuário ---");
            System.out.println("1. Emprestar Livro");
            System.out.println("2. Devolver Livro");
            System.out.println("3. Verificar Conta");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opção: ");

            int opcao = scanner.nextInt();
            scanner.nextLine(); // Consumir a nova linha

            switch (opcao) {
                case 1 -> emprestarLivro(usuario);
                case 2 -> devolverLivro(usuario);
                case 3 -> usuario.verificarConta();
                case 4 -> {
                    return;
                }
                default -> System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }

    private void menuBibliotecario(Bibliotecario bibliotecario) {
        while (true) {
            System.out.println("\n--- Menu do Bibliotecário ---");
            System.out.println("1. Adicionar Livro");
            System.out.println("2. Buscar Livro");
            System.out.println("3. Emprestar Livro para Usuário");
            System.out.println("4. Adicionar novo Usuário");  
            System.out.println("5. Sair");
            System.out.print("Escolha uma opção: ");

            int opcao = scanner.nextInt();
            scanner.nextLine();

            switch (opcao) {
                case 1:
                    adicionarLivro();
                    break;
                case 2:
                    buscarLivro(bibliotecario);
                    break;
                case 3:
                    emprestarLivroBibliotecario(bibliotecario);
                    break;
                case 4:

                    Validador validador = new ValidadorImpl();
                    bibliotecario.adicionarUsuario(usuarios, scanner, validador);
                    break;
                case 5:
                    return;  
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }

    private void emprestarLivroBibliotecario(Bibliotecario bibliotecario) {
        System.out.print("CPF do Usuário: ");
        String cpf = scanner.nextLine();
        System.out.print("Título do Livro: ");
        String titulo = scanner.nextLine();

        Usuario usuario = usuarios.stream()
                .filter(u -> u.getCpf().equals(cpf))
                .findFirst()
                .orElse(null);

        if (usuario == null) {
            System.out.println("Usuário não encontrado.");
            return;
        }

        for (Livro livro : livros) {
            if (livro.getTitulo().equalsIgnoreCase(titulo)) {
                bibliotecario.emprestarLivroParaUsuario(usuario, titulo, cpf);
                return;
            }
        }
        System.out.println("Livro não encontrado.");
    }

    private void emprestarLivro(Usuario usuario) {
        System.out.print("Título do livro para emprestar: ");
        String titulo = scanner.nextLine();

        for (Livro livro : livros) {
            if (livro.getTitulo().equalsIgnoreCase(titulo)) {
                usuario.emprestarLivro(titulo);
                return;
            }
        }
        System.out.println("Livro não encontrado no sistema.");
    }

    private void devolverLivro(Usuario usuario) {
        System.out.print("Título do livro para devolver: ");
        String titulo = scanner.nextLine();
        usuario.devolverLivro(titulo);
    }

    private void adicionarLivro() {
        System.out.print("Título: ");
        String titulo = scanner.nextLine();
        System.out.print("Autor: ");
        String autor = scanner.nextLine();
        System.out.print("ISBN: ");
        String isbn = scanner.nextLine();

        livros.add(new Livro(titulo, autor, isbn));
        System.out.println("Livro adicionado com sucesso.");
    }

    private void buscarLivro(Bibliotecario bibliotecario) {
        System.out.print("Digite o termo de busca: ");
        String search = scanner.nextLine();
        bibliotecario.setSearchString(search);

        System.out.println("Resultados para: " + search);
        for (Livro livro : livros) {
            if (livro.getTitulo().toLowerCase().contains(search.toLowerCase())) {
                System.out.println(livro);
            }
        }
    }

    public static void main(String[] args) {
        SistemaBiblioteca sistema = new SistemaBiblioteca();
        sistema.iniciar();
    }
}
